[[random-scoring]]
=== Random Scoring - 무작위로 score 계산하기

_일관된 무작위 score 계산_ 이 무엇일까, 또는 왜 그것을 사용할까 하고 궁금하게 여길 것이다.
((("consistently random scoring")))((("relevance", "controlling", "random scoring")))
이전의 예제가 좋은 사용 예일 것이다. 이전 예제의 모든 결과는 최종 `_score` 가 1, 2, 3, 4 또는 5일 것이다.
아마 소수의 별장만이 5일 것이고, 많은 별장의 score 가 2, 3일 것이다.

website 의 소유자 입장에서, 광고가 가능한 한 많이 노출되기를 원할 것이다.
현재의 query 에서 동일한 `_score` 를 가진 결과는 항상 동일한 순서로 반환될 것이다.
동일한 score 수준을 가진 모든 document 가, 유사한 노출 빈도를 가지도록 보장하기 위해,
여기에서 약간은 무작위로 소개되는 것이 좋다.

모든 사용자가 서로 다른 무작위의 순서로 보기를 원한다. 그러나, 동일한 사용자는, page 2, 3 등을 클릭할 때마다,
동일한 순서로 보기를 원한다. 이것이 _일관된 무작위(consistently random)_ 의 의미이다.

`random_score` function((("function_score query", "random_score function")))((("random_score function"))) 은 0 ~ 1의 숫자를 출력하며,
동일한 `seed` 값(사용자의 session ID 등)을 제공하면 일관된 무작위 결과를 생성할 것이다:

[source,json]
--------------------------------
GET /_search
{
  "query": {
    "function_score": {
      "filter": {
        "term": { "city": "Barcelona" }
      },
      "functions": [
        {
          "filter": { "term": { "features": "wifi" }},
          "weight": 1
        },
        {
          "filter": { "term": { "features": "garden" }},
          "weight": 1
        },
        {
          "filter": { "term": { "features": "pool" }},
          "weight": 2
        },
        {
          "random_score": { <1>
            "seed":  "the users session id" <2>
          }
        }
      ],
      "score_mode": "sum",
    }
  }
}
--------------------------------
<1> `random_score` 절은 어떤 `filter` 도 가지지 않는다. 따라서, 모든 document 에 적용된다.
<2> 해당 사용자에게 일관된 무작위 결과를 만들어 내기 위하여, 사용자의 session ID 를 `seed` 로 넘긴다.
    동일한 `seed` 는 동일한 무작위 결과로 나타난다.

물론, query 에 일치하는 새로운 document 를 색인 한다면, 일관된 무작위의 사용 여부에 관계없이, 결과의 순서는 바뀐다.
